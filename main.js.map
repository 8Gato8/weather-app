{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-app/webpack/runtime/create fake namespace object","webpack://todo-app/webpack/runtime/load script","webpack://todo-app/./src/assets/img/forecast/ lazy ^\\.\\/.*\\.svg$ namespace object","webpack://todo-app/webpack/bootstrap","webpack://todo-app/webpack/runtime/define property getters","webpack://todo-app/webpack/runtime/ensure chunk","webpack://todo-app/webpack/runtime/get javascript chunk filename","webpack://todo-app/webpack/runtime/get mini-css chunk filename","webpack://todo-app/webpack/runtime/global","webpack://todo-app/webpack/runtime/hasOwnProperty shorthand","webpack://todo-app/webpack/runtime/make namespace object","webpack://todo-app/webpack/runtime/publicPath","webpack://todo-app/webpack/runtime/jsonp chunk loading","webpack://todo-app/./src/ts/app/constants.ts","webpack://todo-app/./src/ts/app/api/fetchForecast.ts","webpack://todo-app/./node_modules/date-fns/constructFrom.mjs","webpack://todo-app/./node_modules/date-fns/constructNow.mjs","webpack://todo-app/./node_modules/date-fns/toDate.mjs","webpack://todo-app/./node_modules/date-fns/startOfDay.mjs","webpack://todo-app/./node_modules/date-fns/isSameDay.mjs","webpack://todo-app/./node_modules/date-fns/isToday.mjs","webpack://todo-app/./src/ts/app/utils.ts","webpack://todo-app/./src/ts/app/TenDay.ts","webpack://todo-app/./node_modules/date-fns/getDay.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://todo-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://todo-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://todo-app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://todo-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US.mjs","webpack://todo-app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://todo-app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://todo-app/./node_modules/date-fns/constants.mjs","webpack://todo-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://todo-app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://todo-app/./node_modules/date-fns/startOfYear.mjs","webpack://todo-app/./node_modules/date-fns/getDayOfYear.mjs","webpack://todo-app/./node_modules/date-fns/startOfWeek.mjs","webpack://todo-app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://todo-app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://todo-app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://todo-app/./node_modules/date-fns/getISOWeek.mjs","webpack://todo-app/./node_modules/date-fns/getWeekYear.mjs","webpack://todo-app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://todo-app/./node_modules/date-fns/getWeek.mjs","webpack://todo-app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://todo-app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://todo-app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://todo-app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://todo-app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://todo-app/./node_modules/date-fns/isDate.mjs","webpack://todo-app/./node_modules/date-fns/isValid.mjs","webpack://todo-app/./node_modules/date-fns/format.mjs","webpack://todo-app/./node_modules/date-fns/setDate.mjs","webpack://todo-app/./src/ts/app/ThirtyDay.ts","webpack://todo-app/./src/ts/app/selectedDayForecast/HourlyForecast.ts","webpack://todo-app/./node_modules/date-fns/locale/ru/_lib/formatDistance.mjs","webpack://todo-app/./node_modules/date-fns/locale/ru/_lib/formatLong.mjs","webpack://todo-app/./node_modules/date-fns/isSameWeek.mjs","webpack://todo-app/./node_modules/date-fns/locale/ru/_lib/formatRelative.mjs","webpack://todo-app/./node_modules/date-fns/locale/ru.mjs","webpack://todo-app/./node_modules/date-fns/locale/ru/_lib/localize.mjs","webpack://todo-app/./node_modules/date-fns/locale/ru/_lib/match.mjs","webpack://todo-app/./node_modules/date-fns/parseISO.mjs","webpack://todo-app/./src/ts/app/selectedDayForecast/SelectedDayForecast.ts","webpack://todo-app/./src/ts/app/Forecast.ts","webpack://todo-app/./src/ts/app/Search.ts","webpack://todo-app/./src/ts/app/App.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"todo-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var map = {\n\t\"./clear-day.svg\": [\n\t\t210,\n\t\t210\n\t],\n\t\"./clear-night.svg\": [\n\t\t158,\n\t\t158\n\t],\n\t\"./cloudy.svg\": [\n\t\t300,\n\t\t300\n\t],\n\t\"./fog.svg\": [\n\t\t164,\n\t\t164\n\t],\n\t\"./hail.svg\": [\n\t\t806,\n\t\t806\n\t],\n\t\"./partly-cloudy-day.svg\": [\n\t\t38,\n\t\t38\n\t],\n\t\"./partly-cloudy-night.svg\": [\n\t\t314,\n\t\t314\n\t],\n\t\"./rain-snow-showers-day.svg\": [\n\t\t969,\n\t\t969\n\t],\n\t\"./rain-snow-showers-night.svg\": [\n\t\t573,\n\t\t573\n\t],\n\t\"./rain-snow.svg\": [\n\t\t438,\n\t\t438\n\t],\n\t\"./rain.svg\": [\n\t\t734,\n\t\t734\n\t],\n\t\"./showers-day.svg\": [\n\t\t804,\n\t\t804\n\t],\n\t\"./showers-night.svg\": [\n\t\t552,\n\t\t552\n\t],\n\t\"./sleet.svg\": [\n\t\t625,\n\t\t625\n\t],\n\t\"./snow-showers-day.svg\": [\n\t\t162,\n\t\t162\n\t],\n\t\"./snow-showers-night.svg\": [\n\t\t870,\n\t\t870\n\t],\n\t\"./snow.svg\": [\n\t\t85,\n\t\t85\n\t],\n\t\"./thunder-rain.svg\": [\n\t\t877,\n\t\t877\n\t],\n\t\"./thunder-showers-day.svg\": [\n\t\t77,\n\t\t77\n\t],\n\t\"./thunder-showers-night.svg\": [\n\t\t153,\n\t\t153\n\t],\n\t\"./thunder.svg\": [\n\t\t626,\n\t\t626\n\t],\n\t\"./wind.svg\": [\n\t\t182,\n\t\t182\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 540;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktodo_app\"] = self[\"webpackChunktodo_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export const API_KEY = 'D9GW7MDHRZ45HXYPHJYLB5GM8';\nexport const BASE_URL = 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline';\nexport const TOO_MANY_REQUESTS_CODE = '429';\nexport const TOO_MANY_REQUESTS_MESSAGE = 'Слишком много запросов, повторите попытку позже';\nexport const BAD_REQUEST_MESSAGE = 'По вашему запросу ничего не найдено, попробуйте поискать что-нибудь другое';\nexport const BAD_REQUEST_CODE = '400';\nexport const INVALID_PATTERN_MESSAGE = 'Название содержать только буквы (не менее 2) в формате \"name\", \"name name\" или \"name-name\"';\nexport const HIDDEN_CLASS = 'hidden';\nexport const DISABLED_CLASS = 'disabled';\nexport const SELECTED_CARD_CLASS = 'forecast-card-button_selected';\nexport const DAYS_IN_WEEK = 7;\n","import { API_KEY, BASE_URL } from '../constants';\nconst searchParams = `?unitGroup=metric&lang=ru&key=${API_KEY}&`;\nexport const fetchForecast = async function ({ address, date, params, }) {\n    const url = `${BASE_URL}/${address}/${date}${searchParams}${params}`;\n    const response = await fetch(url);\n    if (!response.ok)\n        throw new Error(`${response.status}`);\n    const data = await response.json();\n    return data;\n};\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateType | number | string,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { constructNow } from \"./constructNow.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, constructNow(date));\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { HIDDEN_CLASS, DISABLED_CLASS, SELECTED_CARD_CLASS, TOO_MANY_REQUESTS_CODE, TOO_MANY_REQUESTS_MESSAGE, BAD_REQUEST_CODE, BAD_REQUEST_MESSAGE, } from './constants';\nexport function show(element) {\n    element.classList.remove(HIDDEN_CLASS);\n}\nexport function hide(element) {\n    element.classList.add(HIDDEN_CLASS);\n}\nexport function enableButton(button) {\n    button.removeAttribute(DISABLED_CLASS);\n}\nexport function disableButton(button) {\n    button.setAttribute(DISABLED_CLASS, '');\n}\nexport function capitalize(string) {\n    return string[0].toUpperCase() + string.slice(1);\n}\nexport function highlightButton(button) {\n    button.classList.add(SELECTED_CARD_CLASS);\n}\nexport function removeHighlightFromButton(button) {\n    button.classList.remove(SELECTED_CARD_CLASS);\n}\nexport async function handleRequest({ parentElement, error, loader, request, fetchForecast, handleCardsCreation, }) {\n    try {\n        hide(error);\n        hide(parentElement);\n        show(loader);\n        const data = await fetchForecast(request);\n        hide(loader);\n        hide(error);\n        show(parentElement);\n        handleCardsCreation(data);\n    }\n    catch (err) {\n        hide(loader);\n        if (err.message === TOO_MANY_REQUESTS_CODE) {\n            error.textContent = TOO_MANY_REQUESTS_MESSAGE;\n        }\n        if (err.message === BAD_REQUEST_CODE) {\n            error.textContent = BAD_REQUEST_MESSAGE;\n        }\n        show(error);\n    }\n}\n","import { fetchForecast } from './api/fetchForecast';\nimport { isToday } from 'date-fns';\nimport { handleRequest, highlightButton } from './utils';\nexport default function TenDay(onCardButtonClick, setSelectedCardButton, formatDaysData) {\n    const loader = document.querySelector('#ten-day-loader');\n    const error = document.querySelector('#ten-day-error');\n    const forecastElement = document.querySelector('.ten-day-forecast');\n    const forecastList = document.querySelector('.ten-day-forecast__list');\n    const cardTemplate = document.querySelector('#ten-day-forecast-card-template');\n    function createCards(days) {\n        days.forEach((day) => {\n            const formattedData = formatDaysData(day, { weekday: true });\n            const { date, datetime, weekday, dayData, month, icon, conditions, tempmin, tempmax, } = formattedData;\n            const clone = cardTemplate.content.cloneNode(true);\n            const cardButtonElement = clone.querySelector('.ten-day-forecast__card-button');\n            const cardElement = cardButtonElement.querySelector('.ten-day-card');\n            const weekdayElement = cardElement.querySelector('.ten-day-card__week-day');\n            const dayElement = cardElement.querySelector('.ten-day-card__day');\n            const iconElement = cardElement.querySelector('.ten-day-card__icon');\n            const highestTempElement = cardElement.querySelector('#ten-day-card-highest-temp');\n            const lowestTempElement = cardElement.querySelector('#ten-day-card-lowest-temp');\n            weekdayElement.textContent = weekday;\n            dayElement.textContent = `${dayData} ${month}`;\n            dayElement.dateTime = datetime;\n            cardButtonElement.dataset.date = datetime;\n            import(`../../assets/img/forecast/${icon}.svg`).then((res) => (iconElement.src = res.default));\n            iconElement.alt = conditions;\n            highestTempElement.textContent = `${tempmax}°`;\n            lowestTempElement.textContent = `${tempmin}°`;\n            if (isToday(date)) {\n                setSelectedCardButton(cardButtonElement);\n                highlightButton(cardButtonElement);\n            }\n            forecastList.appendChild(cardButtonElement);\n        });\n    }\n    function handleCardsCreation(data) {\n        clear();\n        const days = data.days;\n        createCards(days);\n    }\n    function clear() {\n        while (forecastList.hasChildNodes()) {\n            forecastList.removeChild(forecastList.lastChild);\n        }\n    }\n    async function getForecast(address) {\n        const request = {\n            address,\n            date: 'next9days',\n            params: 'include=days&elements=tempmin,tempmax,datetime,icon,conditions',\n        };\n        handleRequest({\n            parentElement: forecastList,\n            loader,\n            error,\n            request,\n            fetchForecast,\n            handleCardsCreation,\n        });\n    }\n    forecastList.addEventListener('click', onCardButtonClick);\n    return { forecastElement, getForecast, clear };\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param dayOfMonth - The day of the month of the new date\n *\n * @returns The new date with the day of the month set\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * const result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport function setDate(date, dayOfMonth) {\n  const _date = toDate(date);\n  _date.setDate(dayOfMonth);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setDate;\n","import { fetchForecast } from './api/fetchForecast';\nimport { setDate, getDay, isToday, format } from 'date-fns';\nimport { handleRequest, highlightButton } from './utils';\nimport { DAYS_IN_WEEK } from './constants';\nexport default function ThirtyDay(today, onCardButtonClick, selectedCardButton, formatDaysData) {\n    const loader = document.querySelector('#thirty-day-loader');\n    const error = document.querySelector('#thirty-day-error');\n    const forecastElement = document.querySelector('.thirty-day-forecast');\n    const forecastTable = forecastElement.querySelector('.thirty-day-forecast__table');\n    const forecastBody = forecastTable.querySelector('.forecast-table__body');\n    const forecastRowNodeList = forecastBody.querySelectorAll('.forecast-table__row');\n    const forecastColTemplate = document.querySelector('#forecast-table-col-template');\n    const dayOfTheMonth = today.getDate();\n    const weekDayIndex = getDay(today);\n    const weekDayNormalizedIndex = normalizeWeekDayIndex(weekDayIndex);\n    const priorDays = countPriorDays(weekDayNormalizedIndex);\n    function countPriorDays(weekDayNormalizedIndex) {\n        let priorDays = 0;\n        while (priorDays < weekDayNormalizedIndex) {\n            priorDays++;\n        }\n        return priorDays;\n    }\n    function makeDayColorless(cardElement, classForColorless) {\n        cardElement.classList.add(classForColorless);\n    }\n    function createCards(days) {\n        let rowIndex = 0;\n        let dayCount = 0;\n        const daysBeforeToday = days.slice(0, priorDays);\n        days.forEach((day) => {\n            dayCount++;\n            const formattedData = formatDaysData(day);\n            const { date, datetime, dayData, month, icon, tempmin, tempmax, conditions, } = formattedData;\n            const clone = forecastColTemplate.content.cloneNode(true);\n            const forecastColElement = clone.querySelector('.forecast-table__col');\n            const cardButtonElement = forecastColElement.querySelector('.thirty-day-forecast__card-button');\n            const cardElement = cardButtonElement.querySelector('.thirty-day-forecast__card');\n            const dayElement = cardElement.querySelector('.thirty-day-card__day');\n            const iconElement = cardElement.querySelector('.thirty-day-card__icon');\n            const highestTempElement = cardElement.querySelector('#thirty-day-card-highest-temp');\n            const lowestTempElement = cardElement.querySelector('#thirty-day-card-lowest-temp');\n            if (daysBeforeToday.includes(day)) {\n                makeDayColorless(cardElement, 'thirty-day-card_colorless');\n            }\n            dayElement.textContent = `${dayData} ${month}`;\n            dayElement.dateTime = datetime;\n            cardButtonElement.dataset.date = datetime;\n            import(`../../assets/img/forecast/${icon}.svg`).then((res) => (iconElement.src = res.default));\n            iconElement.alt = conditions;\n            highestTempElement.textContent = `${tempmax}°`;\n            lowestTempElement.textContent = `${tempmin}°`;\n            forecastRowNodeList[rowIndex].appendChild(forecastColElement);\n            if (isToday(date)) {\n                selectedCardButton(cardButtonElement);\n                highlightButton(cardButtonElement);\n            }\n            if (dayCount % DAYS_IN_WEEK === 0)\n                rowIndex++;\n        });\n    }\n    function handleCardsCreation(data) {\n        clear();\n        const days = data.days;\n        createCards(days);\n    }\n    function clear() {\n        forecastRowNodeList.forEach((row) => {\n            while (row.hasChildNodes()) {\n                row.removeChild(row.lastChild);\n            }\n        });\n    }\n    function normalizeWeekDayIndex(weekDayIndex) {\n        if (weekDayIndex === 0)\n            return 6;\n        return --weekDayIndex;\n    }\n    function createDatePeriod(priorDays, upcomingDays) {\n        const from = format(setDate(today, dayOfTheMonth - priorDays), 'yyyy-MM-dd');\n        const to = format(setDate(today, dayOfTheMonth - priorDays + upcomingDays), 'yyyy-MM-dd');\n        const datePeriod = `${from}/${to}`;\n        return datePeriod;\n    }\n    async function getForecast(address) {\n        const upcomingDays = 34;\n        const date = createDatePeriod(priorDays, upcomingDays);\n        const request = {\n            address,\n            date,\n            params: 'include=days&elements=tempmin,tempmax,datetime,icon,conditions',\n        };\n        handleRequest({\n            parentElement: forecastTable,\n            loader,\n            error,\n            request,\n            fetchForecast,\n            handleCardsCreation,\n        });\n    }\n    forecastBody.addEventListener('click', onCardButtonClick);\n    return { forecastElement, getForecast, clear };\n}\n","import { enableButton, disableButton, show, hide } from '../utils';\nexport default function HourlyForecast() {\n    const hintElement = document.querySelector('.hours__hint');\n    const sliderElement = document.querySelector('.hours__slider');\n    const hourlyList = document.querySelector('.hourly-forecast-cards');\n    const cardTemplate = document.querySelector('#hour-forecast-card-template');\n    const slideLeft = document.querySelector('#slide-left');\n    const slideRight = document.querySelector('#slide-right');\n    function clearList() {\n        while (hourlyList.hasChildNodes()) {\n            hourlyList.removeChild(hourlyList.lastChild);\n        }\n    }\n    function formatHoursData(hour) {\n        const { datetime, temp } = hour;\n        const hours = `${datetime.slice(0, 2)}:00`;\n        return {\n            ...hour,\n            hours,\n            temp: Math.round(temp),\n        };\n    }\n    function handleCardsCreation(days, currentTime) {\n        const hasHoursData = days[0].hours;\n        if (!hasHoursData) {\n            show(hintElement);\n            hide(sliderElement);\n            return;\n        }\n        clearList();\n        hide(hintElement);\n        show(sliderElement);\n        createCards(days, currentTime);\n    }\n    function createHoursArray(day, dayIndex, currentTime) {\n        let hours = [];\n        const isFirstDay = dayIndex === 0;\n        if (isFirstDay && currentTime) {\n            const hourNow = +currentTime.slice(0, 2) + 1;\n            hours = day.hours.slice(hourNow);\n        }\n        else {\n            hours = day.hours;\n        }\n        return hours;\n    }\n    function createCards(days, currentTime) {\n        let cardsCount = 0;\n        days.forEach((day, dayIndex) => {\n            const hours = createHoursArray(day, dayIndex, currentTime);\n            cardsCount += hours.length;\n            hours.forEach((hour) => {\n                const { hours, icon, conditions, temp } = formatHoursData(hour);\n                const clone = cardTemplate.content.cloneNode(true);\n                const cardElement = clone.querySelector('.hour-forecast-card');\n                const timeElement = cardElement.querySelector('.hour-forecast-card__time');\n                const iconElement = cardElement.querySelector('.hour-forecast-card__icon');\n                const tempElement = cardElement.querySelector('.hour-forecast-card__temp');\n                timeElement.textContent = hours.toString();\n                timeElement.dateTime = hours.toString();\n                import(`../../../assets/img/forecast/${icon}.svg`).then((res) => (iconElement.src = res.default));\n                iconElement.alt = conditions;\n                tempElement.textContent = `${temp}°`;\n                hourlyList.append(cardElement);\n            });\n        });\n        slider.update(cardsCount);\n    }\n    function Slider() {\n        const gap = parseInt(getComputedStyle(document.body).getPropertyValue('--hourly-card-gap'));\n        const width = parseInt(getComputedStyle(document.body).getPropertyValue('--hourly-card-width'));\n        const step = (width + gap) * 3;\n        let cardsCount = 0;\n        let hourlyListWidth = 0;\n        let displayAreaWidth = 0;\n        let sliderWidth = 0;\n        function resetListPosition() {\n            hourlyList.style.left = '0';\n            disableButton(slideLeft);\n            enableButton(slideRight);\n        }\n        function calculateOptions() {\n            sliderWidth = parseInt(getComputedStyle(sliderElement).width);\n            hourlyListWidth = (width + gap) * cardsCount - gap;\n            displayAreaWidth = -(hourlyListWidth - sliderWidth);\n        }\n        function update(newCount) {\n            cardsCount = newCount;\n            calculateOptions();\n            resetListPosition();\n        }\n        function slide(direction) {\n            const currentLeft = parseInt(getComputedStyle(hourlyList).left);\n            const canSlideRight = currentLeft - step > displayAreaWidth;\n            const canSlideLeft = currentLeft + step < 0;\n            if (direction === 'right') {\n                enableButton(slideLeft);\n                if (!canSlideRight) {\n                    disableButton(slideRight);\n                    hourlyList.style.left = `${displayAreaWidth}px`;\n                    return;\n                }\n                hourlyList.style.left = `${currentLeft - step}px`;\n            }\n            else {\n                enableButton(slideRight);\n                if (!canSlideLeft) {\n                    disableButton(slideLeft);\n                    hourlyList.style.left = `0`;\n                    return;\n                }\n                hourlyList.style.left = `${currentLeft + step}px`;\n            }\n        }\n        slideLeft.addEventListener('click', () => slide('left'));\n        slideRight.addEventListener('click', () => slide('right'));\n        document.addEventListener('keydown', (e) => {\n            const keyName = e.key;\n            if (keyName === 'ArrowRight') {\n                if (slideRight.hasAttribute('disabled'))\n                    return;\n                slide('right');\n            }\n            if (keyName === 'ArrowLeft') {\n                if (slideLeft.hasAttribute('disabled'))\n                    return;\n                slide('left');\n            }\n        });\n        addEventListener('resize', () => {\n            update(cardsCount);\n        });\n        return { update };\n    }\n    const slider = Slider();\n    return { handleCardsCreation };\n}\n","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"через \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" назад\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"меньше секунды\",\n      singularNominative: \"меньше {{count}} секунды\",\n      singularGenitive: \"меньше {{count}} секунд\",\n      pluralGenitive: \"меньше {{count}} секунд\",\n    },\n    future: {\n      one: \"меньше, чем через секунду\",\n      singularNominative: \"меньше, чем через {{count}} секунду\",\n      singularGenitive: \"меньше, чем через {{count}} секунды\",\n      pluralGenitive: \"меньше, чем через {{count}} секунд\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} секунда\",\n      singularGenitive: \"{{count}} секунды\",\n      pluralGenitive: \"{{count}} секунд\",\n    },\n    past: {\n      singularNominative: \"{{count}} секунду назад\",\n      singularGenitive: \"{{count}} секунды назад\",\n      pluralGenitive: \"{{count}} секунд назад\",\n    },\n    future: {\n      singularNominative: \"через {{count}} секунду\",\n      singularGenitive: \"через {{count}} секунды\",\n      pluralGenitive: \"через {{count}} секунд\",\n    },\n  }),\n\n  halfAMinute: (_count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"через полминуты\";\n      } else {\n        return \"полминуты назад\";\n      }\n    }\n\n    return \"полминуты\";\n  },\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"меньше минуты\",\n      singularNominative: \"меньше {{count}} минуты\",\n      singularGenitive: \"меньше {{count}} минут\",\n      pluralGenitive: \"меньше {{count}} минут\",\n    },\n    future: {\n      one: \"меньше, чем через минуту\",\n      singularNominative: \"меньше, чем через {{count}} минуту\",\n      singularGenitive: \"меньше, чем через {{count}} минуты\",\n      pluralGenitive: \"меньше, чем через {{count}} минут\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} минута\",\n      singularGenitive: \"{{count}} минуты\",\n      pluralGenitive: \"{{count}} минут\",\n    },\n    past: {\n      singularNominative: \"{{count}} минуту назад\",\n      singularGenitive: \"{{count}} минуты назад\",\n      pluralGenitive: \"{{count}} минут назад\",\n    },\n    future: {\n      singularNominative: \"через {{count}} минуту\",\n      singularGenitive: \"через {{count}} минуты\",\n      pluralGenitive: \"через {{count}} минут\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} часа\",\n      singularGenitive: \"около {{count}} часов\",\n      pluralGenitive: \"около {{count}} часов\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} час\",\n      singularGenitive: \"приблизительно через {{count}} часа\",\n      pluralGenitive: \"приблизительно через {{count}} часов\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} час\",\n      singularGenitive: \"{{count}} часа\",\n      pluralGenitive: \"{{count}} часов\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} день\",\n      singularGenitive: \"{{count}} дня\",\n      pluralGenitive: \"{{count}} дней\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} недели\",\n      singularGenitive: \"около {{count}} недель\",\n      pluralGenitive: \"около {{count}} недель\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} неделю\",\n      singularGenitive: \"приблизительно через {{count}} недели\",\n      pluralGenitive: \"приблизительно через {{count}} недель\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} неделя\",\n      singularGenitive: \"{{count}} недели\",\n      pluralGenitive: \"{{count}} недель\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} месяца\",\n      singularGenitive: \"около {{count}} месяцев\",\n      pluralGenitive: \"около {{count}} месяцев\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} месяц\",\n      singularGenitive: \"приблизительно через {{count}} месяца\",\n      pluralGenitive: \"приблизительно через {{count}} месяцев\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} месяц\",\n      singularGenitive: \"{{count}} месяца\",\n      pluralGenitive: \"{{count}} месяцев\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} года\",\n      singularGenitive: \"около {{count}} лет\",\n      pluralGenitive: \"около {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} год\",\n      singularGenitive: \"приблизительно через {{count}} года\",\n      pluralGenitive: \"приблизительно через {{count}} лет\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} год\",\n      singularGenitive: \"{{count}} года\",\n      pluralGenitive: \"{{count}} лет\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"больше {{count}} года\",\n      singularGenitive: \"больше {{count}} лет\",\n      pluralGenitive: \"больше {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"больше, чем через {{count}} год\",\n      singularGenitive: \"больше, чем через {{count}} года\",\n      pluralGenitive: \"больше, чем через {{count}} лет\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"почти {{count}} год\",\n      singularGenitive: \"почти {{count}} года\",\n      pluralGenitive: \"почти {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"почти через {{count}} год\",\n      singularGenitive: \"почти через {{count}} года\",\n      pluralGenitive: \"почти через {{count}} лет\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  return formatDistanceLocale[token](count, options);\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y 'г.'\",\n  long: \"d MMMM y 'г.'\",\n  medium: \"d MMM y 'г.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport function isSameWeek(dateLeft, dateRight, options) {\n  const dateLeftStartOfWeek = startOfWeek(dateLeft, options);\n  const dateRightStartOfWeek = startOfWeek(dateRight, options);\n\n  return +dateLeftStartOfWeek === +dateRightStartOfWeek;\n}\n\n// Fallback for modularized imports:\nexport default isSameWeek;\n","import { isSameWeek } from \"../../../isSameWeek.mjs\";\n\nconst accusativeWeekdays = [\n  \"воскресенье\",\n  \"понедельник\",\n  \"вторник\",\n  \"среду\",\n  \"четверг\",\n  \"пятницу\",\n  \"субботу\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  if (day === 2 /* Tue */) {\n    return \"'во \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n","import { formatDistance } from \"./ru/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./ru/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./ru/_lib/formatRelative.mjs\";\nimport { localize } from \"./ru/_lib/localize.mjs\";\nimport { match } from \"./ru/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Russian locale.\n * @language Russian\n * @iso-639-2 rus\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const ru = {\n  code: \"ru\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ru;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"до н.э.\", \"н.э.\"],\n  abbreviated: [\"до н. э.\", \"н. э.\"],\n  wide: [\"до нашей эры\", \"нашей эры\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-й кв.\", \"2-й кв.\", \"3-й кв.\", \"4-й кв.\"],\n  wide: [\"1-й квартал\", \"2-й квартал\", \"3-й квартал\", \"4-й квартал\"],\n};\n\nconst monthValues = {\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\n  abbreviated: [\n    \"янв.\",\n    \"фев.\",\n    \"март\",\n    \"апр.\",\n    \"май\",\n    \"июнь\",\n    \"июль\",\n    \"авг.\",\n    \"сент.\",\n    \"окт.\",\n    \"нояб.\",\n    \"дек.\",\n  ],\n\n  wide: [\n    \"январь\",\n    \"февраль\",\n    \"март\",\n    \"апрель\",\n    \"май\",\n    \"июнь\",\n    \"июль\",\n    \"август\",\n    \"сентябрь\",\n    \"октябрь\",\n    \"ноябрь\",\n    \"декабрь\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\n  abbreviated: [\n    \"янв.\",\n    \"фев.\",\n    \"мар.\",\n    \"апр.\",\n    \"мая\",\n    \"июн.\",\n    \"июл.\",\n    \"авг.\",\n    \"сент.\",\n    \"окт.\",\n    \"нояб.\",\n    \"дек.\",\n  ],\n\n  wide: [\n    \"января\",\n    \"февраля\",\n    \"марта\",\n    \"апреля\",\n    \"мая\",\n    \"июня\",\n    \"июля\",\n    \"августа\",\n    \"сентября\",\n    \"октября\",\n    \"ноября\",\n    \"декабря\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"В\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\n  short: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n  abbreviated: [\"вск\", \"пнд\", \"втр\", \"срд\", \"чтв\", \"птн\", \"суб\"],\n  wide: [\n    \"воскресенье\",\n    \"понедельник\",\n    \"вторник\",\n    \"среда\",\n    \"четверг\",\n    \"пятница\",\n    \"суббота\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"веч.\",\n    night: \"ночь\",\n  },\n  abbreviated: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"веч.\",\n    night: \"ночь\",\n  },\n  wide: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полночь\",\n    noon: \"полдень\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"вечер\",\n    night: \"ночь\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"веч.\",\n    night: \"ночи\",\n  },\n  abbreviated: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"веч.\",\n    night: \"ночи\",\n  },\n  wide: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полночь\",\n    noon: \"полдень\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"вечера\",\n    night: \"ночи\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  let suffix;\n  if (unit === \"date\") {\n    suffix = \"-е\";\n  } else if (unit === \"week\" || unit === \"minute\" || unit === \"second\") {\n    suffix = \"-я\";\n  } else {\n    suffix = \"-й\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((до )?н\\.?\\s?э\\.?)/i,\n  abbreviated: /^((до )?н\\.?\\s?э\\.?)/i,\n  wide: /^(до нашей эры|нашей эры|наша эра)/i,\n};\nconst parseEraPatterns = {\n  any: [/^д/i, /^н/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,\n  wide: /^[1234](-?[ыои]?й?)? квартал/i,\n};\n\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[яфмаисонд]/i,\n  abbreviated:\n    /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\\.?/i,\n  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^я/i,\n    /^ф/i,\n    /^м/i,\n    /^а/i,\n    /^м/i,\n    /^и/i,\n    /^и/i,\n    /^а/i,\n    /^с/i,\n    /^о/i,\n    /^н/i,\n    /^я/i,\n  ],\n\n  any: [\n    /^я/i,\n    /^ф/i,\n    /^мар/i,\n    /^ап/i,\n    /^ма[йя]/i,\n    /^июн/i,\n    /^июл/i,\n    /^ав/i,\n    /^с/i,\n    /^о/i,\n    /^н/i,\n    /^д/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[впсч]/i,\n  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\\.?/i,\n  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,\n  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  abbreviated: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i,\n};\n\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^полн/i,\n    noon: /^полд/i,\n    morning: /^у/i,\n    afternoon: /^д[ен]/i,\n    evening: /^в/i,\n    night: /^н/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import HourlyForecast from './HourlyForecast';\nimport { fetchForecast } from '../api/fetchForecast';\nimport { ru } from 'date-fns/locale';\nimport { parseISO, isToday, format } from 'date-fns';\nimport { capitalize, handleRequest } from '../utils';\nexport default function SelectedDayForecast() {\n    const loader = document.querySelector('#selected-day-loader');\n    const error = document.querySelector('#selected-day-error');\n    const forecastElement = document.querySelector('.selected-day-forecast');\n    const forecastDayContainerElement = document.querySelector('.selected-day-forecast__day-container');\n    const addressElement = forecastElement.querySelector('.selected-day-forecast__address');\n    const dayElement = forecastElement.querySelector('.selected-day-forecast__day');\n    const tempElement = forecastElement.querySelector('.selected-day-forecast__temp');\n    const iconElement = document.querySelector('.selected-day-forecast__icon');\n    const conditionsElement = document.querySelector('.main-text-info__conditions');\n    const feelsLikeTempElement = document.querySelector('.feels-like__temp');\n    const windTextElement = document.querySelector('.wind__text');\n    const windDirectionIconElement = document.querySelector('.wind__direction-icon');\n    const humidityTextElement = document.querySelector('.humidity__text');\n    const pressureTextElement = document.querySelector('.pressure__text');\n    function convertKphToMps(valueInKph) {\n        return valueInKph / 3.6;\n    }\n    function convertMillibarToMercury(valueInMillibar) {\n        return valueInMillibar / 1.333;\n    }\n    function formatDayData(day) {\n        const { datetime, temp, conditions, feelslike, humidity, windspeed, winddir, pressure, } = day;\n        const date = parseISO(datetime);\n        const dayString = format(date, \"d MMMM',' eeee\", { locale: ru });\n        const normilizedConditionsString = capitalize(conditions.toLocaleLowerCase());\n        const windspeedInMps = convertKphToMps(windspeed);\n        const pressureInMercury = convertMillibarToMercury(pressure);\n        const formattedData = {\n            datetime: dayString,\n            temp: Math.round(temp),\n            conditions: normilizedConditionsString,\n            feelsLike: Math.round(feelslike),\n            windspeed: Math.round(windspeedInMps),\n            winddir: Math.round(winddir),\n            humidity: Math.round(humidity),\n            pressure: Math.round(pressureInMercury),\n        };\n        return {\n            ...day,\n            ...formattedData,\n        };\n    }\n    function createCard(day, address) {\n        const formattedData = formatDayData(day);\n        const { datetime, temp, icon, conditions, feelslike, humidity, windspeed, winddir, pressure, } = formattedData;\n        addressElement.textContent = address;\n        dayElement.textContent = datetime;\n        tempElement.textContent = `${temp}°`;\n        import(`../../../assets/img/forecast/${icon}.svg`).then((res) => (iconElement.src = res.default));\n        iconElement.alt = conditions;\n        conditionsElement.textContent = conditions;\n        feelsLikeTempElement.textContent = `${feelslike}°`;\n        windTextElement.textContent = `${windspeed} м/с`;\n        windDirectionIconElement.style.transform = `rotate(${winddir}deg)`;\n        windDirectionIconElement.alt = 'Иконка, указывающая направление ветра';\n        humidityTextElement.textContent = `${humidity}%`;\n        pressureTextElement.textContent = `${pressure} мм.рт.ст.`;\n    }\n    function handleCardsCreation(data) {\n        const { currentConditions, resolvedAddress, days } = data;\n        const firstDay = days[0];\n        if (currentConditions) {\n            createCard({\n                ...currentConditions,\n                datetime: firstDay.datetime,\n            }, resolvedAddress);\n            hourlyForecast.handleCardsCreation(days, currentConditions.datetime);\n        }\n        else {\n            createCard(firstDay, resolvedAddress);\n            hourlyForecast.handleCardsCreation(days);\n        }\n    }\n    async function getForecast(address, dateISO) {\n        const date = isToday(parseISO(dateISO)) ? 'next1days' : dateISO;\n        const request = {\n            address,\n            date,\n            params: 'elements=temp,feelslike,humidity,pressure,windspeed,winddir,datetime,icon,conditions',\n        };\n        handleRequest({\n            parentElement: forecastDayContainerElement,\n            error,\n            loader,\n            request,\n            fetchForecast,\n            handleCardsCreation,\n        });\n    }\n    const hourlyForecast = HourlyForecast();\n    return { getForecast };\n}\n","import TenDay from './TenDay';\nimport ThirtyDay from './ThirtyDay';\nimport SelectedDayForecast from './selectedDayForecast/SelectedDayForecast';\nimport { ru } from 'date-fns/locale';\nimport { format, parseISO } from 'date-fns';\nimport { show, hide, highlightButton, removeHighlightFromButton, } from './utils';\nexport default function Forecast() {\n    let address = null;\n    const selectTenDayForecast = document.querySelector('#select-ten-day-forecast');\n    const selectThirtyDayForecast = document.querySelector('#select-thirty-day-forecast');\n    let selectedCardButton = null;\n    function setSelectedCardButton(button) {\n        selectedCardButton = button;\n    }\n    const today = new Date();\n    const todayISO = format(today, 'yyyy-MM-dd', { locale: ru });\n    const onCardButtonClick = function (e) {\n        const target = e.target;\n        const button = target.closest('.forecast-card-button');\n        if (button === null)\n            return;\n        if (selectedCardButton !== null) {\n            removeHighlightFromButton(selectedCardButton);\n        }\n        setSelectedCardButton(button);\n        highlightButton(selectedCardButton);\n        selectedDay.getForecast(address, button.dataset.date);\n        document.body.scrollIntoView(true);\n    };\n    const formatDaysData = function (day, options) {\n        const { datetime, tempmin, tempmax } = day;\n        const date = parseISO(datetime);\n        const dayData = format(date, 'd', { locale: ru });\n        const month = format(date, 'MMM', { locale: ru }).slice(0, -1);\n        const formattedData = {\n            date,\n            dayData,\n            month,\n            tempmin: Math.round(tempmin),\n            tempmax: Math.round(tempmax),\n        };\n        if (options?.weekday) {\n            formattedData.weekday = format(date, 'eeeeee', { locale: ru });\n        }\n        return {\n            ...day,\n            ...formattedData,\n        };\n    };\n    const selectedDay = SelectedDayForecast();\n    const tenDay = TenDay(onCardButtonClick, setSelectedCardButton, formatDaysData);\n    const thirtyDay = ThirtyDay(today, onCardButtonClick, setSelectedCardButton, formatDaysData);\n    function handleForecastSelection({ buttonToHighlight, buttonToDefault, forecastToShow, forecastToHide, address, }) {\n        buttonToDefault.classList.remove('select-period__button_selected');\n        buttonToHighlight.classList.add('select-period__button_selected');\n        hide(forecastToHide.forecastElement);\n        selectedDay.getForecast(address, todayISO);\n        forecastToShow.getForecast(address);\n        show(forecastToShow.forecastElement);\n    }\n    selectTenDayForecast.addEventListener('click', () => {\n        handleForecastSelection({\n            buttonToHighlight: selectTenDayForecast,\n            buttonToDefault: selectThirtyDayForecast,\n            forecastToShow: tenDay,\n            forecastToHide: thirtyDay,\n            address,\n        });\n    });\n    selectThirtyDayForecast.addEventListener('click', () => {\n        handleForecastSelection({\n            buttonToHighlight: selectThirtyDayForecast,\n            buttonToDefault: selectTenDayForecast,\n            forecastToShow: thirtyDay,\n            forecastToHide: tenDay,\n            address,\n        });\n    });\n    function update(newValue) {\n        address = newValue;\n        handleForecastSelection({\n            buttonToHighlight: selectTenDayForecast,\n            buttonToDefault: selectThirtyDayForecast,\n            forecastToShow: tenDay,\n            forecastToHide: thirtyDay,\n            address,\n        });\n    }\n    return { update };\n}\n","import { INVALID_PATTERN_MESSAGE } from './constants';\nimport { show, hide } from './utils';\nexport default function Search(forecast) {\n    const input = document.querySelector('.search-input');\n    const searchForm = document.querySelector('.search-form');\n    const clearButton = document.querySelector('.search-form__clear-input');\n    function validatePattern() {\n        if (input.validity.patternMismatch) {\n            input.setCustomValidity(INVALID_PATTERN_MESSAGE);\n        }\n        else {\n            input.setCustomValidity('');\n        }\n    }\n    function switchClearButtonVisibility() {\n        if (input.value)\n            show(clearButton);\n        else\n            hide(clearButton);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (input.checkValidity()) {\n            forecast.update(input.value);\n        }\n    }\n    function handleClear() {\n        clearInput();\n        hide(clearButton);\n    }\n    function clearInput() {\n        input.value = '';\n    }\n    input.addEventListener('input', validatePattern);\n    input.addEventListener('input', switchClearButtonVisibility);\n    searchForm.addEventListener('submit', handleSubmit);\n    clearButton.addEventListener('click', handleClear);\n    forecast.update('Москва');\n}\n","import Forecast from './Forecast';\nimport Search from './Search';\nexport default function App() {\n    const forecast = Forecast();\n    Search(forecast);\n}\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","m","getPrototypeOf","obj","value","mode","this","__esModule","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","replace","p","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","TOO_MANY_REQUESTS_CODE","TOO_MANY_REQUESTS_MESSAGE","BAD_REQUEST_MESSAGE","BAD_REQUEST_CODE","INVALID_PATTERN_MESSAGE","HIDDEN_CLASS","DISABLED_CLASS","SELECTED_CARD_CLASS","DAYS_IN_WEEK","fetchForecast","async","address","date","params","response","fetch","ok","status","json","constructFrom","Date","constructor","constructNow","now","toDate","argument","argStr","toString","NaN","startOfDay","_date","setHours","isSameDay","dateLeft","dateRight","isToday","show","element","classList","remove","hide","add","enableButton","button","removeAttribute","disableButton","highlightButton","handleRequest","parentElement","loader","handleCardsCreation","err","textContent","TenDay","onCardButtonClick","setSelectedCardButton","formatDaysData","querySelector","forecastElement","forecastList","cardTemplate","clear","days","day","formattedData","weekday","datetime","dayData","month","icon","conditions","tempmin","tempmax","cardButtonElement","content","cloneNode","cardElement","weekdayElement","dayElement","iconElement","highestTempElement","lowestTempElement","dateTime","dataset","res","default","alt","createCards","hasChildNodes","lastChild","addEventListener","getForecast","getDay","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","pattern","object","findKey","valueCallback","rest","slice","buildMatchPatternFn","parseResult","parsePattern","enUS","formatDistance","token","count","result","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parseInt","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","millisecondsInMinute","millisecondsInHour","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","locale","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","a","dayPeriodEnumValue","h","H","S","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","console","warn","includes","warnOrThrowProtectedError","formatter","matched","dayOfMonth","ThirtyDay","selectedCardButton","forecastTable","forecastBody","forecastRowNodeList","querySelectorAll","forecastColTemplate","dayOfTheMonth","weekDayNormalizedIndex","weekDayIndex","normalizeWeekDayIndex","priorDays","countPriorDays","rowIndex","dayCount","daysBeforeToday","forecastColElement","classForColorless","makeDayColorless","row","upcomingDays","createDatePeriod","HourlyForecast","hintElement","sliderElement","hourlyList","slideLeft","slideRight","slider","gap","getComputedStyle","body","getPropertyValue","step","cardsCount","hourlyListWidth","displayAreaWidth","sliderWidth","update","newCount","style","left","slide","direction","currentLeft","canSlideRight","canSlideLeft","keyName","hasAttribute","Slider","currentTime","clearList","dayIndex","isFirstDay","hourNow","createHoursArray","hour","temp","formatHoursData","timeElement","tempElement","append","declension","scheme","rem10","singularNominative","singularGenitive","pluralGenitive","buildLocalizeTokenFn","future","regular","past","_count","isSameWeek","accusativeWeekdays","thisWeek","baseDate","ru","suffix","parseISO","additionalDigits","dateStrings","dateString","split","patterns","dateTimeDelimiter","timeString","timeZoneDelimiter","substr","timezone","exec","splitDateString","parseYearResult","regex","RegExp","captures","restDateString","century","parseYear","dateRegex","isWeekDate","parseDateUnit","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseDate","timestamp","timeRegex","parseTimeUnit","seconds","validateTime","parseTime","dirtyDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","_hours","validateTimezone","parseTimezone","parseFloat","SelectedDayForecast","forecastDayContainerElement","addressElement","conditionsElement","feelsLikeTempElement","windTextElement","windDirectionIconElement","humidityTextElement","pressureTextElement","createCard","feelslike","humidity","windspeed","winddir","pressure","dayString","normilizedConditionsString","toLocaleLowerCase","windspeedInMps","pressureInMercury","feelsLike","formatDayData","transform","currentConditions","resolvedAddress","firstDay","hourlyForecast","dateISO","Forecast","selectTenDayForecast","selectThirtyDayForecast","todayISO","closest","removeHighlightFromButton","selectedDay","scrollIntoView","tenDay","thirtyDay","handleForecastSelection","buttonToHighlight","buttonToDefault","forecastToShow","forecastToHide","newValue","Search","forecast","searchForm","clearButton","validity","patternMismatch","setCustomValidity","preventDefault","checkValidity"],"sourceRoot":""}